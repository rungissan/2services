# This file is generated by Nx.
#
# Build the docker image with `npx nx docker-build @two-services/serviceA`.
# Tip: Modify "docker-build" options in project.json to change docker build args.
#
# Run the container with `docker run -p 3000:3000 -t two-services-servicea`.

# Development stage
FROM docker.io/node:lts-alpine AS development

ENV HOST=0.0.0.0
ENV PORT=3000

WORKDIR /app

RUN addgroup --system two-services-servicea && \
          adduser --system -G two-services-servicea two-services-servicea

COPY serviceA/package.json ./
RUN npm install

COPY serviceA/. ./
RUN chown -R two-services-servicea:two-services-servicea .

EXPOSE 3000

USER two-services-servicea

CMD ["npm", "run", "start:dev"]

# Production stage
FROM docker.io/node:lts-alpine AS production

ENV HOST=0.0.0.0
ENV PORT=3000

WORKDIR /app

RUN addgroup --system two-services-servicea && \
          adduser --system -G two-services-servicea two-services-servicea

COPY serviceA/dist two-services-servicea/
COPY serviceA/package.json two-services-servicea/
RUN chown -R two-services-servicea:two-services-servicea .

# You can remove this install step if you build with `--bundle` option.
# The bundled output will include external dependencies.
RUN npm --prefix two-services-servicea --omit=dev -f install

EXPOSE 3000

USER two-services-servicea

CMD [ "node", "two-services-servicea" ]
