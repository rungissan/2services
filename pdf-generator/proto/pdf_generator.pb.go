// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/pdf_generator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Report generation status
type ReportStatus int32

const (
	ReportStatus_PENDING     ReportStatus = 0
	ReportStatus_IN_PROGRESS ReportStatus = 1
	ReportStatus_COMPLETED   ReportStatus = 2
	ReportStatus_FAILED      ReportStatus = 3
)

// Enum value maps for ReportStatus.
var (
	ReportStatus_name = map[int32]string{
		0: "PENDING",
		1: "IN_PROGRESS",
		2: "COMPLETED",
		3: "FAILED",
	}
	ReportStatus_value = map[string]int32{
		"PENDING":     0,
		"IN_PROGRESS": 1,
		"COMPLETED":   2,
		"FAILED":      3,
	}
)

func (x ReportStatus) Enum() *ReportStatus {
	p := new(ReportStatus)
	*p = x
	return p
}

func (x ReportStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReportStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pdf_generator_proto_enumTypes[0].Descriptor()
}

func (ReportStatus) Type() protoreflect.EnumType {
	return &file_proto_pdf_generator_proto_enumTypes[0]
}

func (x ReportStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReportStatus.Descriptor instead.
func (ReportStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_pdf_generator_proto_rawDescGZIP(), []int{0}
}

// Request to generate a PDF report
type GenerateReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportType    string                 `protobuf:"bytes,1,opt,name=report_type,json=reportType,proto3" json:"report_type,omitempty"`
	StartTime     string                 `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                 `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Metrics       []string               `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Filters       map[string]string      `protobuf:"bytes,5,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateReportRequest) Reset() {
	*x = GenerateReportRequest{}
	mi := &file_proto_pdf_generator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateReportRequest) ProtoMessage() {}

func (x *GenerateReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pdf_generator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateReportRequest.ProtoReflect.Descriptor instead.
func (*GenerateReportRequest) Descriptor() ([]byte, []int) {
	return file_proto_pdf_generator_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateReportRequest) GetReportType() string {
	if x != nil {
		return x.ReportType
	}
	return ""
}

func (x *GenerateReportRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GenerateReportRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GenerateReportRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GenerateReportRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Response after generating a PDF report
type GenerateReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      string                 `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	PdfData       []byte                 `protobuf:"bytes,2,opt,name=pdf_data,json=pdfData,proto3" json:"pdf_data,omitempty"`
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Success       bool                   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateReportResponse) Reset() {
	*x = GenerateReportResponse{}
	mi := &file_proto_pdf_generator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateReportResponse) ProtoMessage() {}

func (x *GenerateReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pdf_generator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateReportResponse.ProtoReflect.Descriptor instead.
func (*GenerateReportResponse) Descriptor() ([]byte, []int) {
	return file_proto_pdf_generator_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateReportResponse) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *GenerateReportResponse) GetPdfData() []byte {
	if x != nil {
		return x.PdfData
	}
	return nil
}

func (x *GenerateReportResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GenerateReportResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GenerateReportResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Request to get report generation status
type GetReportStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      string                 `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReportStatusRequest) Reset() {
	*x = GetReportStatusRequest{}
	mi := &file_proto_pdf_generator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReportStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportStatusRequest) ProtoMessage() {}

func (x *GetReportStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pdf_generator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportStatusRequest.ProtoReflect.Descriptor instead.
func (*GetReportStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_pdf_generator_proto_rawDescGZIP(), []int{2}
}

func (x *GetReportStatusRequest) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

// Response with report generation status
type GetReportStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      string                 `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	Status        ReportStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=pdfgenerator.ReportStatus" json:"status,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReportStatusResponse) Reset() {
	*x = GetReportStatusResponse{}
	mi := &file_proto_pdf_generator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReportStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportStatusResponse) ProtoMessage() {}

func (x *GetReportStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pdf_generator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportStatusResponse.ProtoReflect.Descriptor instead.
func (*GetReportStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_pdf_generator_proto_rawDescGZIP(), []int{3}
}

func (x *GetReportStatusResponse) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *GetReportStatusResponse) GetStatus() ReportStatus {
	if x != nil {
		return x.Status
	}
	return ReportStatus_PENDING
}

func (x *GetReportStatusResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetReportStatusResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// Time series data point
type TimeSeriesData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSeriesData) Reset() {
	*x = TimeSeriesData{}
	mi := &file_proto_pdf_generator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSeriesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeriesData) ProtoMessage() {}

func (x *TimeSeriesData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pdf_generator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeriesData.ProtoReflect.Descriptor instead.
func (*TimeSeriesData) Descriptor() ([]byte, []int) {
	return file_proto_pdf_generator_proto_rawDescGZIP(), []int{4}
}

func (x *TimeSeriesData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TimeSeriesData) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TimeSeriesData) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Chart data for PDF generation
type ChartData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	XAxisLabel    string                 `protobuf:"bytes,2,opt,name=x_axis_label,json=xAxisLabel,proto3" json:"x_axis_label,omitempty"`
	YAxisLabel    string                 `protobuf:"bytes,3,opt,name=y_axis_label,json=yAxisLabel,proto3" json:"y_axis_label,omitempty"`
	DataPoints    []*TimeSeriesData      `protobuf:"bytes,4,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChartData) Reset() {
	*x = ChartData{}
	mi := &file_proto_pdf_generator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChartData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartData) ProtoMessage() {}

func (x *ChartData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pdf_generator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartData.ProtoReflect.Descriptor instead.
func (*ChartData) Descriptor() ([]byte, []int) {
	return file_proto_pdf_generator_proto_rawDescGZIP(), []int{5}
}

func (x *ChartData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChartData) GetXAxisLabel() string {
	if x != nil {
		return x.XAxisLabel
	}
	return ""
}

func (x *ChartData) GetYAxisLabel() string {
	if x != nil {
		return x.YAxisLabel
	}
	return ""
}

func (x *ChartData) GetDataPoints() []*TimeSeriesData {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

var File_proto_pdf_generator_proto protoreflect.FileDescriptor

const file_proto_pdf_generator_proto_rawDesc = "" +
	"\n" +
	"\x19proto/pdf_generator.proto\x12\fpdfgenerator\"\x94\x02\n" +
	"\x15GenerateReportRequest\x12\x1f\n" +
	"\vreport_type\x18\x01 \x01(\tR\n" +
	"reportType\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\tR\aendTime\x12\x18\n" +
	"\ametrics\x18\x04 \x03(\tR\ametrics\x12J\n" +
	"\afilters\x18\x05 \x03(\v20.pdfgenerator.GenerateReportRequest.FiltersEntryR\afilters\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x01\n" +
	"\x16GenerateReportResponse\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\x12\x19\n" +
	"\bpdf_data\x18\x02 \x01(\fR\apdfData\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"5\n" +
	"\x16GetReportStatusRequest\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\"\xab\x01\n" +
	"\x17GetReportStatusResponse\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\x122\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1a.pdfgenerator.ReportStatusR\x06status\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\"\xc1\x01\n" +
	"\x0eTimeSeriesData\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x12@\n" +
	"\x06labels\x18\x03 \x03(\v2(.pdfgenerator.TimeSeriesData.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa4\x01\n" +
	"\tChartData\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\fx_axis_label\x18\x02 \x01(\tR\n" +
	"xAxisLabel\x12 \n" +
	"\fy_axis_label\x18\x03 \x01(\tR\n" +
	"yAxisLabel\x12=\n" +
	"\vdata_points\x18\x04 \x03(\v2\x1c.pdfgenerator.TimeSeriesDataR\n" +
	"dataPoints*G\n" +
	"\fReportStatus\x12\v\n" +
	"\aPENDING\x10\x00\x12\x0f\n" +
	"\vIN_PROGRESS\x10\x01\x12\r\n" +
	"\tCOMPLETED\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x032\xd2\x01\n" +
	"\x13PDFGeneratorService\x12[\n" +
	"\x0eGenerateReport\x12#.pdfgenerator.GenerateReportRequest\x1a$.pdfgenerator.GenerateReportResponse\x12^\n" +
	"\x0fGetReportStatus\x12$.pdfgenerator.GetReportStatusRequest\x1a%.pdfgenerator.GetReportStatusResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_pdf_generator_proto_rawDescOnce sync.Once
	file_proto_pdf_generator_proto_rawDescData []byte
)

func file_proto_pdf_generator_proto_rawDescGZIP() []byte {
	file_proto_pdf_generator_proto_rawDescOnce.Do(func() {
		file_proto_pdf_generator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_pdf_generator_proto_rawDesc), len(file_proto_pdf_generator_proto_rawDesc)))
	})
	return file_proto_pdf_generator_proto_rawDescData
}

var file_proto_pdf_generator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_pdf_generator_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_pdf_generator_proto_goTypes = []any{
	(ReportStatus)(0),               // 0: pdfgenerator.ReportStatus
	(*GenerateReportRequest)(nil),   // 1: pdfgenerator.GenerateReportRequest
	(*GenerateReportResponse)(nil),  // 2: pdfgenerator.GenerateReportResponse
	(*GetReportStatusRequest)(nil),  // 3: pdfgenerator.GetReportStatusRequest
	(*GetReportStatusResponse)(nil), // 4: pdfgenerator.GetReportStatusResponse
	(*TimeSeriesData)(nil),          // 5: pdfgenerator.TimeSeriesData
	(*ChartData)(nil),               // 6: pdfgenerator.ChartData
	nil,                             // 7: pdfgenerator.GenerateReportRequest.FiltersEntry
	nil,                             // 8: pdfgenerator.TimeSeriesData.LabelsEntry
}
var file_proto_pdf_generator_proto_depIdxs = []int32{
	7, // 0: pdfgenerator.GenerateReportRequest.filters:type_name -> pdfgenerator.GenerateReportRequest.FiltersEntry
	0, // 1: pdfgenerator.GetReportStatusResponse.status:type_name -> pdfgenerator.ReportStatus
	8, // 2: pdfgenerator.TimeSeriesData.labels:type_name -> pdfgenerator.TimeSeriesData.LabelsEntry
	5, // 3: pdfgenerator.ChartData.data_points:type_name -> pdfgenerator.TimeSeriesData
	1, // 4: pdfgenerator.PDFGeneratorService.GenerateReport:input_type -> pdfgenerator.GenerateReportRequest
	3, // 5: pdfgenerator.PDFGeneratorService.GetReportStatus:input_type -> pdfgenerator.GetReportStatusRequest
	2, // 6: pdfgenerator.PDFGeneratorService.GenerateReport:output_type -> pdfgenerator.GenerateReportResponse
	4, // 7: pdfgenerator.PDFGeneratorService.GetReportStatus:output_type -> pdfgenerator.GetReportStatusResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_pdf_generator_proto_init() }
func file_proto_pdf_generator_proto_init() {
	if File_proto_pdf_generator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_pdf_generator_proto_rawDesc), len(file_proto_pdf_generator_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_pdf_generator_proto_goTypes,
		DependencyIndexes: file_proto_pdf_generator_proto_depIdxs,
		EnumInfos:         file_proto_pdf_generator_proto_enumTypes,
		MessageInfos:      file_proto_pdf_generator_proto_msgTypes,
	}.Build()
	File_proto_pdf_generator_proto = out.File
	file_proto_pdf_generator_proto_goTypes = nil
	file_proto_pdf_generator_proto_depIdxs = nil
}
