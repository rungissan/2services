# This file is generated by Nx.
#
# Build the docker image with `npx nx docker-build @two-services/serviceB`.
# Tip: Modify "docker-build" options in project.json to change docker build args.
#
# Run the container with `docker run -p 3001:3001 -t two-services-serviceb`.

# Development stage
FROM docker.io/node:lts-alpine AS development

ENV HOST=0.0.0.0
ENV PORT=3001

WORKDIR /app

RUN addgroup --system two-services-serviceb && \
          adduser --system -G two-services-serviceb two-services-serviceb

COPY serviceB/package.json ./
RUN npm install

# Copy built dist folder and source code
COPY serviceB/dist ./dist/
COPY serviceB/. ./

RUN chown -R two-services-serviceb:two-services-serviceb .

EXPOSE 3001

USER two-services-serviceb

CMD ["node", "dist/main.js"]

# Production stage
FROM docker.io/node:lts-alpine AS production

ENV HOST=0.0.0.0
ENV PORT=3001

WORKDIR /app

RUN addgroup --system two-services-serviceb && \
          adduser --system -G two-services-serviceb two-services-serviceb

COPY serviceB/dist two-services-serviceb/
COPY serviceB/package.json two-services-serviceb/
RUN chown -R two-services-serviceb:two-services-serviceb .

# You can remove this install step if you build with `--bundle` option.
# The bundled output will include external dependencies.
RUN npm --prefix two-services-serviceb --omit=dev -f install

EXPOSE 3001

USER two-services-serviceb

CMD [ "node", "two-services-serviceb/main.js" ]
